//MODULAR INVERSE USING EXTENDED GCD 
int extended_euclidean(int a,int b,int& x,int& y) {
    if(b==0){
        x=1;
        y=0;
        return a;
    }
    int x1,y1;
    int d=extended_euclidean(b,a%b,x1,y1);
    x=y1;
    y=x1-y1*(a/b);
    return d;
}
int32_t main(){
    #ifndef ONLINE_JUDGE
        debug_cerr=true;
        freopen("./input.txt", "r", stdin);
        freopen("./output.txt", "w", stdout);
        freopen("./debug.txt", "w", stderr);
    #endif
    fastio;
    int a,b;
    cin>>a>>b;
    int x,y;
    int g=extended_euclidean(a,b,x,y);
    if(g!=1){
        cout<<"No solution!";
    }
    else{
        x=(x%b+b)%b;
        cout<<x<<endl;
    }
}